function Block(e,t,n,r,a){this.settled=void 0===a?0:1,this.height=settings.blockHeight,this.fallingLane=e,this.checked=0,this.angle=90-(30+60*e),this.angularVelocity=0,this.targetAngle=this.angle,this.color=t,this.deleted=0,this.removed=0,this.tint=0,this.opacity=1,this.initializing=1,this.ict=MainHex.ct,this.iter=n,this.initLen=settings.creationDt,this.attachedLane=0,this.distFromHex=r||settings.startDist*settings.scale,this.incrementOpacity=function(){if(this.deleted){if(this.opacity>=.925){var e=this.attachedLane-MainHex.position
for(e=MainHex.sides-e;0>e;)e+=MainHex.sides
e%=MainHex.sides,MainHex.shakes.push({lane:e,magnitude:3*(window.devicePixelRatio?window.devicePixelRatio:1)*settings.scale})}this.opacity=this.opacity-.075*MainHex.dt,this.opacity<=0&&(this.opacity=0,this.deleted=2,(1==gameState||0==gameState)&&localStorage.setItem("saveState",exportSaveState()))}},this.getIndex=function(){for(var e=MainHex.blocks[this.attachedLane],t=0;t<e.length;t++)if(e[t]==this)return t},this.draw=function(e,t){this.height=settings.blockHeight,Math.abs(settings.scale-settings.prevScale)>1e-9&&(this.distFromHex*=settings.scale/settings.prevScale),this.incrementOpacity(),void 0===e&&(e=!1),this.angle>this.targetAngle?this.angularVelocity-=angularVelocityConst*MainHex.dt:this.angle<this.targetAngle&&(this.angularVelocity+=angularVelocityConst*MainHex.dt),Math.abs(this.angle-this.targetAngle+this.angularVelocity)<=Math.abs(this.angularVelocity)?(this.angle=this.targetAngle,this.angularVelocity=0):this.angle+=this.angularVelocity,this.width=2*this.distFromHex/Math.sqrt(3),this.widthWide=2*(this.distFromHex+this.height)/Math.sqrt(3)
var n,r,a,i
if(this.initializing){var s=(MainHex.ct-this.ict)/this.initLen
s>1&&(s=1),n=rotatePoint(-this.width/2*s,this.height/2,this.angle),r=rotatePoint(this.width/2*s,this.height/2,this.angle),a=rotatePoint(this.widthWide/2*s,-this.height/2,this.angle),i=rotatePoint(-this.widthWide/2*s,-this.height/2,this.angle),MainHex.ct-this.ict>=this.initLen&&(this.initializing=0)}else n=rotatePoint(-this.width/2,this.height/2,this.angle),r=rotatePoint(this.width/2,this.height/2,this.angle),a=rotatePoint(this.widthWide/2,-this.height/2,this.angle),i=rotatePoint(-this.widthWide/2,-this.height/2,this.angle)
this.deleted?ctx.fillStyle="#FFF":0===gameState?"r"==this.color.charAt(0)?ctx.fillStyle=rgbColorsToTintedColors[this.color]:ctx.fillStyle=hexColorsToTintedColors[this.color]:ctx.fillStyle=this.color,ctx.globalAlpha=this.opacity
var o=trueCanvas.width/2+Math.sin(this.angle*(Math.PI/180))*(this.distFromHex+this.height/2)+gdx,u=trueCanvas.height/2-Math.cos(this.angle*(Math.PI/180))*(this.distFromHex+this.height/2)+gdy
ctx.beginPath(),ctx.moveTo(o+n.x,u+n.y),ctx.lineTo(o+r.x,u+r.y),ctx.lineTo(o+a.x,u+a.y),ctx.lineTo(o+i.x,u+i.y),ctx.closePath(),ctx.fill(),this.tint&&(this.opacity<1&&((1==gameState||0==gameState)&&localStorage.setItem("saveState",exportSaveState()),this.iter=2.25,this.tint=0),ctx.fillStyle="#FFF",ctx.globalAlpha=this.tint,ctx.beginPath(),ctx.moveTo(o+n.x,u+n.y),ctx.lineTo(o+r.x,u+r.y),ctx.lineTo(o+a.x,u+a.y),ctx.lineTo(o+i.x,u+i.y),ctx.lineTo(o+n.x,u+n.y),ctx.closePath(),ctx.fill(),this.tint-=.02*MainHex.dt,this.tint<0&&(this.tint=0)),ctx.globalAlpha=1}}function findCenterOfBlocks(e){for(var t=0,n=0,r=0;r<e.length;r++){t+=e[r].distFromHex
for(var a=e[r].angle;0>a;)a+=360
n+=a%360}return t/=e.length,n/=e.length,{x:trueCanvas.width/2+Math.cos(n*(Math.PI/180))*t,y:trueCanvas.height/2+Math.sin(n*(Math.PI/180))*t}}