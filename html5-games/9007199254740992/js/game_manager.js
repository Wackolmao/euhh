function GameManager(t,e,o,a){this.size=t,this.inputManager=new e,this.scoreManager=new a,this.actuator=new o,this.startTiles=2,this.inputManager.on("move",this.move.bind(this)),this.inputManager.on("restart",this.restart.bind(this)),this.setup()}GameManager.prototype.restart=function(){this.actuator.restart(),this.setup()},GameManager.prototype.setup=function(){this.grid=new Grid(this.size),this.score=0,this.over=!1,this.won=!1,this.addStartTiles(),this.actuate()},GameManager.prototype.addStartTiles=function(){for(var t=0;t<this.startTiles;t++)this.addRandomTile()},GameManager.prototype.addRandomTile=function(){if(this.grid.cellsAvailable()){var t=Math.random()<.9?2:4,e=new Tile(this.grid.randomAvailableCell(),t)
this.grid.insertTile(e)}},GameManager.prototype.actuate=function(){this.scoreManager.get()<this.score&&this.scoreManager.set(this.score),this.actuator.actuate(this.grid,{score:this.score,over:this.over,won:this.won,bestScore:this.scoreManager.get()})},GameManager.prototype.prepareTiles=function(){this.grid.eachCell(function(t,e,o){o&&(o.mergedFrom=null,o.savePosition())})},GameManager.prototype.moveTile=function(t,e){this.grid.cells[t.x][t.y]=null,this.grid.cells[e.x][e.y]=t,t.updatePosition(e)},GameManager.prototype.move=function(t){var e=this
if(!this.over&&!this.won){var o,a,n=this.getVector(t),i=this.buildTraversals(n),r=!1
this.prepareTiles(),i.x.forEach(function(t){i.y.forEach(function(i){if(o={x:t,y:i},a=e.grid.cellContent(o)){var u=e.findFarthestPosition(o,n),m=e.grid.cellContent(u.next)
if(m&&m.value===a.value&&!m.mergedFrom){var s=new Tile(u.next,2*a.value)
s.mergedFrom=[a,m],e.grid.insertTile(s),e.grid.removeTile(a),a.updatePosition(u.next),e.score+=s.value,9007199254740992===s.value&&(e.won=!0)}else e.moveTile(a,u.farthest)
e.positionsEqual(o,a)||(r=!0)}})}),r&&(this.addRandomTile(),this.movesAvailable()||(this.over=!0),this.actuate())}},GameManager.prototype.getVector=function(t){var e={0:{x:0,y:-1},1:{x:1,y:0},2:{x:0,y:1},3:{x:-1,y:0}}
return e[t]},GameManager.prototype.buildTraversals=function(t){for(var e={x:[],y:[]},o=0;o<this.size;o++)e.x.push(o),e.y.push(o)
return 1===t.x&&(e.x=e.x.reverse()),1===t.y&&(e.y=e.y.reverse()),e},GameManager.prototype.findFarthestPosition=function(t,e){var o
do o=t,t={x:o.x+e.x,y:o.y+e.y}
while(this.grid.withinBounds(t)&&this.grid.cellAvailable(t))
return{farthest:o,next:t}},GameManager.prototype.movesAvailable=function(){return this.grid.cellsAvailable()||this.tileMatchesAvailable()},GameManager.prototype.tileMatchesAvailable=function(){for(var t,e=this,o=0;o<this.size;o++)for(var a=0;a<this.size;a++)if(t=this.grid.cellContent({x:o,y:a}))for(var n=0;4>n;n++){var i=e.getVector(n),r={x:o+i.x,y:a+i.y},u=e.grid.cellContent(r)
if(u&&u.value===t.value)return!0}return!1},GameManager.prototype.positionsEqual=function(t,e){return t.x===e.x&&t.y===e.y}
